@namespace Capstone.Components.AdminComponents
@using Capstone.Models
@using Capstone.Shared.Models
@using Capstone.Services
@inject ContactService contactService

<RadzenPanelMenu Style="width:300px; position:fixed;" Multiple="true" class="rz-background-color-base-600">
	<RadzenPanelMenuItem Text="Manage Users" Icon="group">
		<RadzenPanelMenuItem Icon="search"
							 Click="@((_)=>OnMenuItemSelection.InvokeAsync(AdminSidebarSelections.UserSearch))">
			<Template>
				<PanelMenuItemTemplate Label="Search" NumOfNotifications="null" />
			</Template>
		</RadzenPanelMenuItem>
		<RadzenPanelMenuItem Icon="person_add" Value="@AdminSidebarSelections.UserAdd">
			<Template>
				<PanelMenuItemTemplate Label="Add User" />
			</Template>
		</RadzenPanelMenuItem>
	</RadzenPanelMenuItem>
	<RadzenPanelMenuItem Text="Manage Destinations" Icon="landscape">
		<RadzenPanelMenuItem Icon="add"
							 Click="@((_)=>OnMenuItemSelection.InvokeAsync(AdminSidebarSelections.DestinationAdd))">
			<Template>
				<PanelMenuItemTemplate Label="Add Destination" NumOfNotifications="null" />
			</Template>
		</RadzenPanelMenuItem>
		<RadzenPanelMenuItem Icon="edit"
							 Click="@((_)=>{OnMenuItemSelection.InvokeAsync(AdminSidebarSelections.DestinationEdit);})">
			<Template>
				<PanelMenuItemTemplate Label="Edit Destinations" />
			</Template>
		</RadzenPanelMenuItem>
	</RadzenPanelMenuItem>
	<RadzenPanelMenuItem Text="Messages" Icon="feedback" Click="@((_) => { OnMenuItemSelection.InvokeAsync(AdminSidebarSelections.Messages); })" />
</RadzenPanelMenu>

@code {
	[Parameter]
	public EventCallback<AdminSidebarSelections> OnMenuItemSelection { get; set; }

	[Parameter]
	public EventCallback<ContactMessage.MessageTopic> OnMessageTopicSelection { get; set; }


	private void ReportTopicSelect(MenuItemEventArgs e)
	{
		if (e.Value is ContactMessage.MessageTopic topic)
		{
			OnMessageTopicSelection.InvokeAsync(topic);
		}
	}

}
