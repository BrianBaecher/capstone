@using Radzen
@using Radzen.Blazor
@using Capstone.Models
@using Capstone.Shared.Models
@using Capstone.Services
@namespace Capstone.Components.AdminComponents

@inject DestinationService destinationService

<RadzenDataGrid @ref="grid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" AllowPaging="true" PageSize="5" AllowSorting="true"
				Data="@destinations" TItem="Destination">
	<Columns>
		<RadzenDataGridColumn Width="50px" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
			<Template Context="data">
				@(destinations.IndexOf(data) + 1)
			</Template>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn Property="Name" Title="Name">
			<Template Context="destination">
				<RadzenStack Orientation="Radzen.Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center">
					<RadzenImage Path="@destination.GetImageUrl(AppConfigHelper.ApiBaseUrl)" Style="width: 40px; height: 40px;" class="rz-border-radius-2" AlternateText="" />
					<RadzenStack Gap="0">
						<RadzenText TextStyle="TextStyle.Subtitle2" class="rz-mb-0">@destination.Name</RadzenText>
						<RadzenText TextStyle="TextStyle.Caption" class="rz-mb-0">@destination.Name</RadzenText>
					</RadzenStack>
				</RadzenStack>
			</Template>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn Property="PricePerDay" Title="Price/Day" />
		<RadzenDataGridColumn Property="Description" Title="Description">
			<Template Context="destination">
				@destination.Name
			</Template>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn Width="160px" Property="OrderID" Title="Order Details">
			<Template Context="data">
				<RadzenStack>
					<RadzenText TextStyle="TextStyle.Subtitle1">@data.Code</RadzenText>
					<RadzenButton ButtonStyle="ButtonStyle.Warning" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="build" class="rz-m-1" Text="Edit" Click="() => ReportEditSelection(data)" />
					<RadzenButton ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Shade="Shade.Dark" Icon="delete" class="rz-m-1" Text="Delete" Click="() => OnDeleteDestination(data)" />
				</RadzenStack>
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

@code {

	[Parameter]
	public EventCallback<Destination> OnSelection { get; set; }

	RadzenDataGrid<Destination> grid;

	List<Destination> destinations = new();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		var asArr = await destinationService.GetAllAsync();

		destinations = asArr.ToList();
	}

	public void RefreshGrid()
	{
		grid?.Reload();
	}

	void ReportEditSelection(Destination d)
	{
		OnSelection.InvokeAsync(d);
	}

	private async Task OnDeleteDestination(Destination d)
	{
		var isDeleteSuccess = await destinationService.DeleteDestinationAsync(d);

		if (isDeleteSuccess)
		{
			destinations.Remove(d);
			RefreshGrid();
		}
	}

	public void UpdateDestination(Destination updated)
	{
		var idx = destinations.FindIndex(x => x.Id == updated.Id);

		if (idx == -1) return;
		destinations[idx] = updated;
		RefreshGrid();
	}
}
