@using Capstone.Shared.Models
@using Capstone.Services
@inject SessionState sessionState
@inject NavigationManager navigationManager
@inject DialogService dialogService

<RadzenCard Style="max-width: 420px">
	<RadzenRow JustifyContent="JustifyContent.Center"
			   AlignItems="AlignItems.Center"
			   Gap="1rem">
		<RadzenProfileMenu @ref=menu Click="OnMenuClick"> 
			<Template>
				<RadzenIcon Icon="person" />
			</Template>
			<ChildContent>
				@if (User?.Role == "admin")
				{
					if (!IsAtAdminPage())
					{
						<RadzenProfileMenuItem Text="Admin Dashboard" Icon="build" Path="admin" />
					}
					else
					{
						<RadzenProfileMenuItem Text="To Site" Icon="build" Path="" />
					}
				}
				<RadzenProfileMenuItem Text="My Trips" Icon="travel" Value="trips" />
			</ChildContent>
		</RadzenProfileMenu>
		<RadzenStack Gap="0">
			<RadzenText TextStyle="TextStyle.Overline" class="rz-my-0">Logged in as:</RadzenText>
			<RadzenText TextStyle="TextStyle.Body1"><b>@(User?.Username)</b></RadzenText>
		</RadzenStack>
		<RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="logout" Text="Log Out" Click="OnLogoutClick" />
	</RadzenRow>
</RadzenCard>

@code {
	[Parameter]
	public User? User { get; set; }

	[Parameter]
	public EventCallback OnLogout { get; set; }

	RadzenProfileMenu? menu;

	private async Task OnLogoutClick()
	{
		sessionState.SetUser(null);
		await OnLogout.InvokeAsync();
	}

	private bool IsAtAdminPage()
	{
		return navigationManager.Uri.Contains("/admin");
	}

	private async Task OpenMyTripsDialog()
	{
		@if(User == null) return;

		// passing params to a component inside of dialog requires string, obj dict.
		var parameters = new Dictionary<string, object?>
		{
			[nameof(User)] = User
		};

		var modal = await dialogService.OpenAsync<MyTripsComponent>(
			title: "My Trips",
			parameters: parameters
		);
	}

	private async Task OnMenuClick(RadzenProfileMenuItem item)
	{
		if(item.Value == "trips")
		{
			await OpenMyTripsDialog();
		}
	}
}
