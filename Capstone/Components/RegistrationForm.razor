@using Capstone.Shared.Models
@using Capstone.Services

@inject AuthService authService
@inject SessionState sessionState

<RadzenTemplateForm TItem="RegistrationInfo" Data="info" Submit="OnSubmit">
	<RadzenFormField Text="Desired Username" Style="width: 100%;">
		<RadzenTextBox @bind-Value="@info.Username" />
	</RadzenFormField>
	<RadzenFormField Text="Password" Style="width: 100%;">
		<RadzenTextBox @bind-Value="@info.Password" />
	</RadzenFormField>
	<RadzenFormField Text="Email Address" Style="width: 100%;">
		<RadzenTextBox @bind-Value="@info.Email" />
	</RadzenFormField>
	<RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Text="Register"/>
</RadzenTemplateForm>

@code {
	[Parameter]
	public EventCallback OnRegistrationSuccess { get; set; }

	RegistrationInfo info = new();

	private async Task OnSubmit()
	{
		Console.WriteLine("===========Registration submit========");
		Console.WriteLine($"user: {info.Username}");

		var response = await authService.RegisterAsync(info);

		if (response != null)
		{
			await sessionState.SetUserAsync(response.User, response.Token);
			await OnRegistrationSuccess.InvokeAsync();
		}
	}
}
