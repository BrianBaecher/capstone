@page "/admin"
@using Capstone.Models
@using Capstone.Components.AdminComponents
@using Capstone.Shared.Models
@using Capstone.Services
@layout AdminLayout
@inject NavigationManager navigationManager
@inject SessionState sessionState


<div class="layout-container" style="display: flex; min-height: 100vh;">
	<div class="sidebar rz-background-color-base-600" style="width: 300px;">
		<AdminSidebar OnMenuItemSelection="RenderContent"
					  OnMessageTopicSelection="HandleMessageTopicSelection"
					  @ref=sidebar />
	</div>
	<div class="main" style="flex: 1;">
		@*content*@
		@if (frag == null)
		{
			<p>Click user search</p>
		}
		else
		{
			@frag
		}
	</div>
</div>

@code {

	AdminSidebar sidebar;

	RenderFragment? frag;

	private void RenderContent(AdminSidebarSelections selection)
	{
		switch (selection)
		{
			case AdminSidebarSelections.UserSearch:
				frag = @<UserSearchComponent />;
				break;
			case AdminSidebarSelections.UserAdd:
				break;
			case AdminSidebarSelections.DestinationAdd:
				frag =@<AddDestinationComponent />;
				break;
			case AdminSidebarSelections.DestinationEdit:
				frag =@<EditDestinationComponent />;
				break;
			case AdminSidebarSelections.Messages:
				frag =@<ContactMessageDisplayComponent OnReadStatusChange="HandleUnreadMessageCountChange" @ref=idk />;
				break;
			default:
				break;
		}
	}

	ContactMessageDisplayComponent idk;

	private void OnLogout()
	{
		// navigate back to home
		navigationManager.NavigateTo("/");
	}

	protected override void OnInitialized()
	{
		if (sessionState.CurrentUser == null || sessionState.CurrentUser.Role != "admin")
		{
			OnLogout();
		}
	}

	private void HandleUnreadMessageCountChange((ContactMessage.MessageTopic topic, bool isIncrease) args)
	{
		// used as prop-drilled callback in message display -> message list components, updates sidebar count.
		// args is a tuple, because EventCallback only takes one <T> as argument.
		sidebar?.UpdateUnreadMessageCount(args.topic, args.isIncrease);
	}

	private void HandleMessageTopicSelection(ContactMessage.MessageTopic topic)
	{
		idk?.ScrollToTopic(topic);
	}
}
